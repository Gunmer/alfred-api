name: Continuos Deployment

on:
  push:
    branches:
      - main
      - develop

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.release.major }}.${{ steps.release.minor }}.${{ steps.release.patch }}
      release_created: ${{ steps.release.release_created }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Prepare release
        uses: google-github-actions/release-please-action@v3
        id: release
        with:
          command: manifest
          token: ${{secrets.GITHUB_TOKEN}}
          default-branch: main

  generate-release:
    runs-on: ubuntu-latest
    needs: prepare-release
    if: ${{ needs.prepare-release.outputs.release_created }}
    outputs:
      image: ${{ steps.build-image.outputs.image }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 17
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Build jar
        run: ./gradlew build
      - uses: azure/docker-login@v1
        with:
          login-server: penworacr.azurecr.io
          username: ${{ secrets.PENWORACR_USERNAME }}
          password: ${{ secrets.PENWORACR_PASSWORD }}
      - name: Build and push image
        id: build-image
        env:
          REGISTRY: penworacr.azurecr.io
          REPOSITORY: alfred-api
          IMAGE_TAG: ${{ needs.prepare-release.outputs.version }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$REGISTRY/$REPOSITORY:$IMAGE_TAG"

  deploy-release:
    runs-on: ubuntu-latest
    needs:
      - prepare-release
      - generate-release
    if: ${{ needs.prepare-release.outputs.release_created }}
    steps:
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
      - name: Set AKS context
        uses: azure/k8s-set-context@v2
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.PENWORAKS_KUBECONFIG }}
          context: PennyworthAKS
      - name: Deploy new image
        env:
          IMAGE: ${{ needs.generate-release.outputs.image }}
          CONTAINER: alfred-api
          DEPLOYMENT: alfred-api-deploy
        run: |
          kubectl set image deployment $DEPLOYMENT $CONTAINER=$IMAGE
